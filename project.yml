# https://github.com/yonaskolb/XcodeGen/blob/master/Docs/ProjectSpec.md

name: SwiftUIComposableArchitecture
fileGroups: [SwiftUIComposableArchitecture]
configs:
  debug: debug
  release: release
options:
  minimumXcodeGenVersion: "2.24.0"
  usesTabs: false
  indentWidth: 2
  tabWidth: 2
  deploymentTarget:
    iOS: "14.0"
  developmentLanguage: ja
configFiles:
  debug: SwiftUIComposableArchitecture/Application/ConfigurationSettings/Development.xcconfig
  release: SwiftUIComposableArchitecture/Application/ConfigurationSettings/Production.xcconfig

# Build settings
settingGroups:
  app_setting:
    PRODUCT_BUNDLE_IDENTIFIER: "jp.yuoku.SwiftUIComposableArchitecture"
    SWIFT_VERSION: "5.0"
    CLANG_ENABLE_OBJC_WEAK: YES
    MTL_FAST_MATH: YES
    CODE_SIGN_STYLE: Manual
    TARGETED_DEVICE_FAMILY: "1,2"
    CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED: YES
    OTHER_LINKER_FLAGS: $(inherited) -ObjC
  build_debug:
    CODE_SIGN_IDENTITY: iPhone Developer
    DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
    MTL_ENABLE_DEBUG_INFO: INCLUDE_SOURCE
    APS_ENVIRONMENT: development
  build_release:
    CODE_SIGN_IDENTITY: iPhone Distribution
    DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
    SWIFT_OPTIMIZATION_LEVEL: "-O"
    SWIFT_COMPILATION_MODE: wholemodule
    CLANG_ANALYZER_NONNULL: YES
    CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION: YES_AGGRESSIVE
    MTL_ENABLE_DEBUG_INFO: NO
    ENABLE_NS_ASSERTIONS: NO
    ENABLE_STRICT_OBJC_MSGSEND: YES
    VALIDATE_PRODUCT: YES
    APS_ENVIRONMENT: production

# SwiftPM
packages:
  swift-composable-architecture:
    url: https://github.com/pointfreeco/swift-composable-architecture.git
    from: 0.27.0
  GRDB:
    url: https://github.com/groue/GRDB.swift.git
    from: 5.11.0
  Kingfisher:
    url: https://github.com/onevcat/Kingfisher.git
    from: 6.3.1
  SwiftSnapshotTesting:
    url: https://github.com/pointfreeco/swift-snapshot-testing.git
    from: 1.9.0

# Build targets
targets:
  # Application target
  SwiftUIComposableArchitecture:
    type: application
    platform: iOS
    settings:
      configs:
        debug:
          groups: [app_setting, build_debug]
        release:
          groups: [app_setting, build_release]
    sources:
      - path: SwiftUIComposableArchitecture
        excludes:
          - "**/.gitkeep"
          - "**/*.md"
          - "**/Settings.bundle"
    dependencies:
      - package: swift-composable-architecture
        product: ComposableArchitecture
      - package: swift-composable-architecture
        product: CasePaths
      - package: swift-composable-architecture
        product: CombineSchedulers
      - package: swift-composable-architecture
        product: CustomDump
      - package: swift-composable-architecture
        product: IdentifiedCollections
      - package: swift-composable-architecture
        product: XCTestDynamicOverlay
      - package: GRDB
      - package: Kingfisher
    preBuildScripts:
      - path: ./scripts/license_plist.sh
        name: LicensePlist
    postBuildScripts:
      - path: ./scripts/swift_lint.sh
        name: SwiftLint
  # Tests target
  SwiftUIComposableArchitectureTests:
    type: bundle.unit-test
    platform: iOS
    settings:
      ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES: YES
      BUNDLE_NAME: 'SwiftUIComposableArchitecture.Tests'
      configs:
        debug:
            VALIDATE_WORKSPACE: YES
    sources:
      - SwiftUIComposableArchitectureTests
    dependencies:
      - target: SwiftUIComposableArchitecture

  # SnapshotTests target
  SwiftUIComposableArchitectureSnapshotTests:
    type: bundle.unit-test
    platform: iOS
    settings:
      ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES: YES
      BUNDLE_NAME: 'SwiftUIComposableArchitecture.SnapshotTests'
      configs:
        debug:
            VALIDATE_WORKSPACE: YES
    sources: SwiftUIComposableArchitectureSnapshotTests
    dependencies:
      - target: SwiftUIComposableArchitecture
      - package: SwiftSnapshotTesting
        product: SnapshotTesting

# Scheme definition
schemeTemplates:
  SwiftUIComposableArchitectureScheme:
    build:
      targets:
        SwiftUIComposableArchitecture: all
        SwiftUIComposableArchitectureTests: [test]
        SwiftUIComposableArchitectureSnapshotTests: [test]
    run:
      config: ${debugConfig}
      commandLineArguments:
        "-AppleLanguages (ja)": true
      environmentVariables:
        - variable: SNAPSHOT_ARTIFACTS
          value: $(SOURCE_ROOT)/$(PROJECT_NAME)Tests/__Snapshots__/Failure
          isEnabled: true
    test:
      config: ${debugConfig}
      gatherCoverageData: true
      targets:
        - SwiftUIComposableArchitectureTests
        - SwiftUIComposableArchitectureSnapshotTests
    profile:
      config: ${releaseConfig}
    analyze:
      config: ${debugConfig}
    archive:
      config: ${releaseConfig}
schemes:
  App:
    templates: [SwiftUIComposableArchitectureScheme]
    templateAttributes:
      debugConfig: debug
      releaseConfig: release
